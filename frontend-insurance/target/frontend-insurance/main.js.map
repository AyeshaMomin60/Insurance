{"version":3,"sources":["./src/app/user/view-enroll-policy/view-enroll-policy.component.html","./src/app/user/view-enroll-policy/view-enroll-policy.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/admin/admin-registration/admin-registration.component.ts","./src/app/admin/admin-registration/admin-registration.component.html","./src/app/user/user-login/user-login.component.html","./src/app/user/user-login/user-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/admin/admin-login/admin-login.component.ts","./src/app/Pipes/filter.pipe.ts","./src/app/user/policy.service.ts","./src/app/admin/policy/policy.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user/user.service.ts","./src/app/admin/policy/list-policy/list-policy.component.html","./src/app/admin/policy/list-policy/list-policy.component.ts","./src/app/app.module.ts","./src/app/user/user-show-policy/user-show-policy.component.html","./src/app/user/user-show-policy/user-show-policy.component.ts","./src/app/service/user-authentication.service.ts","./src/app/admin/policy/edit-policy/edit-policy.component.ts","./src/app/admin/policy/edit-policy/edit-policy.component.html","./src/app/admin/policy/create-policy/create-policy.component.ts","./src/app/admin/policy/create-policy/create-policy.component.html","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/user/user-registration/user-registration.component.html","./src/app/user/user-registration/user-registration.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- <p>view-enroll-policy works!</p> -->\n\n<div *ngFor=\"let p of (allPolicy) | keyvalue\">\n    <table class=\"table\" id=\"myTable\">   \n        <tr>&nbsp;&nbsp;\n            <b>{{p.key}}</b> - {{p.value | json}}\n        </tr>\n  <!-- <th>{{p.name }}</th>\n  <tr><b>Plan Id:</b>{{p.planId}}</tr>\n  <tr><b>Cost: </b>{{ p.cost | currency: \"IND\" }}</tr>\n  <tr><b>Details:</b>{{p.Details}}</tr>\n  <tr><b>Deductible: </b> {{ p.deductible | currency: \"IND\" }}</tr> -->\n</table>\n</div>\n&nbsp;\n<button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/user-list-policy']\">Policies</button>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Policy } from 'src/app/admin/policy/Policy';\nimport { User } from 'src/app/model/user';\nimport { UserAuthenticationService } from 'src/app/service/user-authentication.service';\nimport { PolicyService } from '../policy.service';\nimport { UserService } from '../user.service';\nimport { UserPlan } from '../UserPlan';\n\n@Component({\n  selector: 'app-view-enroll-policy',\n  templateUrl: './view-enroll-policy.component.html',\n  styleUrls: ['./view-enroll-policy.component.css']\n})\nexport class ViewEnrollPolicyComponent implements OnInit {\n\n // allPolicy:any[];\n \n allPolicy:Policy;\n  user:UserPlan;\n  userId:number;\n\n  constructor(private userService: UserService, \n    private router: Router,\n    private policyService:PolicyService,\n    private http: HttpClient,\n    private route: ActivatedRoute,\n   private authService:UserAuthenticationService) {\n\n   }\n   \n\n  ngOnInit(): void {\n    \n    this.userId=+this.authService.getUserId();\n    console.log(this.userId);\n    this.reloadData(this.userId);\n  }\n\n\n  reloadData(userId:number){\n    //console.log(this.userId);\n    // this.userService.getUserByUserId(userId).subscribe(\n    //   (res:any)=>{\n    //   console.log(res)\n    //   this.user=res;\n    //   },\n    //   error=>{\n    //      console.log(error);\n    //   });\n\n    console.log\n    this.policyService.policyByUserId(userId).subscribe(\n      (res:any)=>{\n      console.log(res)\n      this.allPolicy=res;\n      \n      },\n      error=>{\n         console.log(error);\n      });\n\n  }\n  \n  \n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<body >\n    \n    <!-- <img src=\"https://www.futuremind.com/m/articles/none/Mobile_application_guide_for_the_insurance_industry.jpg\"> -->\n</body>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-registration',\n  templateUrl: './admin-registration.component.html',\n  styleUrls: ['./admin-registration.component.css']\n})\nexport class AdminRegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-registration works!</p>\n","\n  \n<!-- <app-navbar></app-navbar> -->\n<body>\n    <main class=\"d-flex align-items-center min-vh-100 py-3 py-md-0\">\n      <div class=\"container\">\n        <div class=\"card login-card\">\n          <div class=\"row no-gutters\">\n            <!-- <div class=\"col-md-5\">\n              <img src=\"https://img.freepik.com/free-photo/laughing-pretty-young-woman-jumping-holding-shopping-bags_171337-11429.jpg?size=626&ext=jpg\" alt=\"login\" class=\"login-card-img\">\n            </div> -->\n            <div class=\"col-md-7\">\n              <div class=\"card-body\">\n                <div class=\"brand-wrapper\">\n                  <!--<img src=\"assets/images/logo.svg\" alt=\"logo\" class=\"logo\">-->\n                  <!-- <img src=\"https://api.freelogodesign.org/files/fdb1f155327c4bb99634113ddc2f3d2c/thumb/logo_200x200.png?v=0\" alt=\"Brand Logo\" style =\"width:120px\"> -->\n                  <h1>Welcome to Insurance Appliocation</h1>\n                </div>\n                <p class=\"login-card-description\">Sign into your account</p>\n                <form #custForm=\"ngForm\" (submit)=\"getUserByEmail()\" > \n                  <small  class=\"small text-danger\">\n                   {{errormsg}}\n                </small>\n                    <div class=\"form-group\">\n                      <label for=\"email\" class=\"sr-only\">email</label>\n                      <input type=\"email\"\n                       name=\"email\" \n                       id=\"email\" \n                       class=\"form-control\"\n                        placeholder=\"Email\"\n                        [(ngModel)]=\"customer.email\"\n                        #email=\"ngModel\" \n                        required>\n                        <!-- <small *ngIf=\"mobile.dirty && mobile.errors?.required\" class=\"small text-danger\">\n                            Mobile Number is mandatory\n                            </small>\n                            <small *ngIf=\" mobile.errors?.pattern\" class=\"small text-danger\">\n                                Mobile number must be 10 digits\n                            </small> -->\n                    </div>\n                    <div class=\"form-group mb-4\">\n                      <label for=\"password\" class=\"sr-only\">Password</label>\n                      <input type=\"password\"\n                       name=\"password\" \n                       id=\"password\" \n                       class=\"form-control\"\n                        placeholder=\"*******\"\n                        required\n                        [(ngModel)]=\"customer.password\"\n                        #password=\"ngModel\">\n                        <small *ngIf=\"password.dirty && password.errors?.required\" class=\"small text-danger\">\n                            password is mandatory\n                            </small>\n                    </div>\n                    <input name=\"login\" id=\"login\" class=\"btn btn-block login-btn mb-4\" type=\"submit\" value=\"Login\" [disabled]=\"!custForm.valid\">\n                  </form>\n                  <a href=\"#!\" class=\"forgot-password-link\">Forgot password?</a>\n                  <p class=\"login-card-footer-text\">Don't have an account? <a [routerLink]=\"['/user-registration']\" class=\"text-reset\">Register here</a></p>\n                  <nav class=\"login-card-footer-nav\">\n                    <a href=\"#!\">Terms of use.</a>\n                    <a href=\"#!\">Privacy policy</a>\n                  </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n      </div>\n    </main>\n    <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n  </body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserAuthenticationService } from 'src/app/service/user-authentication.service';\nimport { User } from '../User';\nimport { UserService } from '../user.service';\nimport { UserLogin } from '../userLogin';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n  isLoggedin=false;\n  customer: UserLogin={\n    email:'',\n    password:''\n  }\n\n  userInfo:User;\n  errormsg:any;\n  customerUser: any;\n  data:any;\n\n  constructor(private userService: UserService,private authService: UserAuthenticationService, private router: Router) { \n    this.errormsg = '';\n    \n  }\n\n  ngOnInit(): void {\n  }\n  \n  getUserByEmail(){\n    let user = {\n      email: this.customer.email,\n      password: this.customer.password\n\n    }\n        this.userService.getUserByEmail(user.email,user.password).subscribe(response => {\n          console.log(response);\n          this.customerUser = response;\n          this.router.navigate(['/user-list-policy']);\n          if(this.customerUser.password == user.password)\n          {\n            this.userService.getUserId(user.email).subscribe(\n              (user:User) => {\n                this.userInfo = user;\n                console.log(this.userInfo);\n                this.authService.removeUserId();\n                this.authService.setUserId(this.userInfo.userId);\n                 console.log(this.userInfo.userId);\n                this.authService.removeUserName();\n                this.authService.setUserName(this.userInfo.name);\n \n              });\n\n            this.router.navigate(['user-list-policy'], \n            { queryParams: { val: this.customerUser.email }});\n          }\n          else {\n           this.errormsg ='invalid password';\n          }\n        },\n        err => {\n          if(err.status == 404) {\n            this.errormsg = \"invalid Mobile number or Password-\";\n          } \n      }\n        );\n\n  }\n\n  \n}","<!-- <app-navbar></app-navbar> -->\n<main>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-sm-6 login-section-wrapper\">\n          <div class=\"brand-wrapper\">\n            <!--<img src=\"assets/images/logo.svg\" alt=\"logo\" class=\"logo\">-->\n            <!-- <img src=\"https://api.freelogodesign.org/files/fdb1f155327c4bb99634113ddc2f3d2c/thumb/logo_200x200.png?v=0\" alt=\"Brand Logo\" style =\"width:120px\"> -->\n            <h1>Welcome to Admin Portal</h1>\n          </div>\n          <div class=\"login-wrapper my-auto\">\n            <h1 class=\"login-title\">Log in</h1>\n            <form #adminForm=\"ngForm\" (ngSubmit)=\"onSubmit(adminForm.value)\">\n              <div class=\"text-danger small\">{{errorMsg}}</div>\n              <div class=\"form-group\">\n                <label for=\"mobile\">Mobile Number</label>\n                <input type=\"mobile\" name=\"mobile\" id=\"mobile\" class=\"form-control\" placeholder=\"000-000-000-0\"\n                [(ngModel)]=\"admin.mobile\" required #mobile=\"ngModel\" pattern=\"[7-9]{1}[0-9]{9}\">\n                <small *ngIf=\"mobile.dirty && mobile.errors?.required\" class=\"small text-danger\">\n                  Mobile Number is mandatory\n                  </small>\n                  <small *ngIf=\"mobile.dirty && mobile.errors?.pattern\" class=\"small text-danger\">\n                    Put a valid Mobile Mumber\n                    </small>\n              </div>\n              <div class=\"form-group mb-4\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" \n                placeholder=\"4 digits passcode\" [(ngModel)]=\"admin.password\" required \n                 #password=\"ngModel\" minlength=\"3\" pattern=\"[0-9]{4}\">\n                <small *ngIf=\"password.dirty && password.errors?.required\" class=\"small text-danger\">\n                  Password is mandetory\n                  </small>\n                  <small *ngIf=\"password.errors?.minlength\" class=\"small text-danger\">\n                    Password should be 4 digits\n                    </small>\n                    <small *ngIf=\"password.errors?.pattern\" class=\"small text-danger\">\n                      Password should be numeric\n                      </small>\n              </div>\n              <input name=\"login\" id=\"login\" class=\"btn btn-block login-btn\" type=\"submit\" \n              value=\"Login\" [disabled]=\"!adminForm.valid\">\n            </form>\n            <a href=\"#!\" class=\"forgot-password-link\">Forgot password?</a>\n            <p class=\"login-card-footer-text\">Don't have an account? <a routerLink=\"admin-registeration\" class=\"text-reset\">Register here</a></p>\n            <nav class=\"login-card-footer-nav\">\n              <a href=\"#!\">Terms of use.</a>\n              <a href=\"#!\">Privacy policy</a>\n            </nav>\n          </div>\n        </div>\n        <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n          <!-- <img src=\"https://www.pngitem.com/pimgs/m/128-1280822_check-mark-box-clip-art-blue-admin-icon.png\" alt=\"login image\" class=\"login-img\"> -->\n        </div>\n      </div>\n    </div>\n  </main>\n  <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>","import { Component, OnInit } from '@angular/core';\n//import { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserAuthenticationService } from 'src/app/service/user-authentication.service';\nimport { Admin } from './Admin';\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  admin: Admin={\n    mobile:'',\n    password:''\n  }\n  errorMsg:any=\"\";\n  constructor(private router: Router,\n    private authService:UserAuthenticationService) { }\n\n  ngOnInit(): void {\n    this.errorMsg=\"\";\n  }\n  onSubmit(adminForm: any){\n    if(adminForm.mobile===\"9876543210\" && adminForm.password===\"1234\"){\n      this.authService.removeUserId();\n                this.authService.setUserId(1);\n                this.authService.removeUserName();\n                this.authService.setUserName(\"Admin\");\n      \n      \n      this.router.navigate([\"list-policy\"]);\n      console.log(\"Login succesfull\");\n      \n    }\n    else{\n      this.errorMsg=\"Invalid Employee Id/ password\";\n      console.log(\"Login not succesfull\");\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'appFilter' })\r\nexport class FilterPipe implements PipeTransform {\r\n  /**\r\n   * Transform\r\n   *\r\n   * @param {any[]} items\r\n   * @param {string} searchText\r\n   * @returns {any[]}\r\n   */\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      return it.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n\n  allPolicy: any = [];\n\n  private baseUrl = 'http://localhost:8080/backend-insurance/api';\n  constructor(private http: HttpClient) { }\n\n\n  showAllPlans() {\n    return this.http.get(`${this.baseUrl}/showAllPlans`);\n  }\n\n  getPolicyList(name: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/viewPlanByName/${name}`);\n  }\n  getPlanByPlanId(planId: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/viewPlanById/${planId}`);\n  }\n  getPolicy(planId: number) {\n    console.log(planId)\n    return this.http.get(`${this.baseUrl}/viewPlanById/` + planId);\n  }\n\n  policyByUserId(userId: number) {\n    return this.http.get(`${this.baseUrl}/UserTakenPlan/${userId}`);\n\n  }\n\n\n\n\n\n\n\n\n  //   showAllPlans(){\n  //     return this.http.get(\"http://localhost:8080/api/showAllPlans\");\n  //   }\n\n  //   getPolicyList(name:string):Observable<any>{\n  //     return this.http.get(`http://localhost:8080/api/viewPlanByName/${name}`);\n  //   }\n  //   getPlanByPlanId(planId:number):Observable<any>{\n  //     return this.http.get(`http://localhost:8080/api/viewPlanById/${planId}`);\n  //   }\n  //   getPolicy(planId:number){\n  //     console.log(planId)\n  //     return this.http.get(`http://localhost:8080/api/viewPlanById/`+planId);\n  // }\n\n  // policyByUserId(userId:number){\n  //   return this.http.get(`http://localhost:8080/api/UserTakenPlan/${userId}`);\n\n  // }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { planEnrollment } from 'src/app/user/planEnrollment';\nimport { Policy } from './Policy';\nimport { UpdatePolicy } from './UpdatePolicy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n\n  allPolicy : any= [];\n  plan:Policy;\n\n  private baseUrl = 'http://localhost:8080/backend-insurance/api';\n\n  constructor(private http: HttpClient) { }\n\n\nshowAllPlans(){\n    \n    return this.http.get(`${this.baseUrl}/showAllPlans`);\n  }\n\n  getPolicy(planId:number){\n    console.log(planId)\n    return this.http.get(`${this.baseUrl}/viewPlanById/`+planId);\n}\n\n  createPolicy(policy: any){\n   console.log(policy);\n    return this.http.post(`${this.baseUrl}/CreatePlan`, policy);\n  }\n\n \n\n\n  public deletePlan(planId:number) {\n    return this.http.delete(`${this.baseUrl}/DeletePlan/`+planId);\n     }\n\n\n  updatePolicy(policy:UpdatePolicy):Observable<object>\n  {\n   // console.log(policy);\n       return this.http.put(`${this.baseUrl}/updatePlan`,policy);\n      }\n\n  \n\n//   showAllPlans(){\n    \n//     return this.http.get(\"http://localhost:8080/api/showAllPlans\");\n//   }\n\n//   getPolicy(planId:number){\n//     console.log(planId)\n//     return this.http.get(`http://localhost:8080/api/viewPlanById/`+planId);\n// }\n\n//   createPolicy(policy: any){\n//    console.log(policy);\n//     return this.http.post(\"http://localhost:8080/api/CreatePlan\", policy);\n//   }\n\n//   // deletePlan(planId:number):Observable<any>{\n   \n//   //    return this.http.delete(\"http://localhost:8080/api/DeletePlan/${planId}\", { responseType: 'text' });\n//   //   }\n\n\n//   public deletePlan(planId:number) {\n//     return this.http.delete(`http://localhost:8080/api/DeletePlan/`+planId);\n//      }\n\n\n//   updatePolicy(policy:UpdatePolicy):Observable<object>\n//   {\n//    // console.log(policy);\n//        return this.http.put(\"http://localhost:8080/api/updatePlan\",policy);\n//       }\n\n  \n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'insurance';\n}\n","<!-- <app-edit-policy></app-edit-policy> -->\n<!-- <app-create-policy></app-create-policy> -->\n<!-- <app-admin-home></app-admin-home> -->\n<!-- <app-delete-policy></app-delete-policy> -->\n<!-- <app-user-show-policy></app-user-show-policy> -->\n<!-- <app-list-policy></app-list-policy> -->\n<!-- <app-list-policy></app-list-policy> -->\n<!-- <app-user-registration></app-user-registration> -->\n<!-- <app-admin-login></app-admin-login> -->\n<!-- <app-user-login></app-user-login> -->\n<!-- <app-login></app-login> -->\n<!-- <app-navbar></app-navbar> -->\n<!-- <app-home></app-home> -->\n<app-home></app-home>\n<router-outlet></router-outlet>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  allCustomer: any=[];\n  private baseUrl = 'http://localhost:8080/backend-insurance/api';\n  \n  constructor(private http: HttpClient) { } \n\n  addUser(user: any)\n  {\n    console.log(user);\n    return this.http.post(`${this.baseUrl}/addUser`, user);\n  }\n  \n enrollment(user: any)\n  {\n  console.log(user);\n  return this.http.post(`${this.baseUrl}/EnrollIntoPlane`,user);\n   }\n \n  getUserByEmail(email:any,password:any){\n    console.log(email);\n    console.log(password);\n    return this.http.get(`${this.baseUrl}/user/login/${email}/${password}`);\n    \n  }\n\n//   getUserId(email:string):Observable<any>{\n//     return this.http.get(`${this.baseUrl}/viewUserbyEmail/${email}`);\n// }\ngetUserId(email:string):Observable<any>{\n    return this.http.get(`${this.baseUrl}/userDetails/${email}/`);\n}\n\n  getUserByUserId(userId:number){\n  return this.http.get(`${this.baseUrl}/UserByUserId/`+userId);\n}\n\n  \n\n\n\n\n  // addUser(user: any)\n  //   {\n  //   console.log(user);\n  //   return this.http.post(\"http://localhost:8080/api/addUser\", user);\n  // }\n//   enrollment(user: any)\n//   {\n//   console.log(user);\n//   return this.http.post(`http://localhost:8080/api/EnrollIntoPlane`,user);\n//    }\n \n//   getUserByMobile(email:any,password:any){\n//     console.log(email);\n//     console.log(password);\n//     return this.http.get(`http://localhost:8080/api/user/login/${email}/${password}`);\n    \n//   }\n\n//   getUserId(email:string):Observable<any>{\n//     return this.http.get(`http://localhost:8080/api/viewUserbyEmail/${email}`);\n// }\n\n// getUserByUserId(userId:number){\n//   return this.http.get(`http://localhost:8080/api/UserByUserId/`+userId);\n// }\n\n  // addCart(cart : any){\n  //   return this.http.post(\"\", cart);\n  // }\n}","\n<div class=\"mx-5 mt-4\">\n  <!-- <div class=\"w-25\"> -->\n    <!-- <div *ngIf=\"params.enrolled\" class=\"alert alert-danger\">\n      Already enrolled in a plan.\n    </div> -->\n  <!-- </div> -->\n\n  <div class=\"col-xs-12 col-sm-6 col-md-12 form-outline\">\n    <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\"\n     autocomplete=\"off\" placeholder=\"Search Policy here\">\n  </div>\n\n  <h1>Plans</h1>\n    <div *ngFor=\"let policy of (allPolicy | filter:searchText)\" class=\"container\">\n        <table class=\"table table-dark\">\n      <th>{{policy.name }}</th>\n      <tr><b>Plan Id:</b>{{policy.planId}}</tr>\n      <tr><b>Cost: </b>{{ policy.cost | currency: \"IND\" }}</tr>\n      <tr><b>Details:</b>{{policy.details}}</tr>\n      <tr><b>Deductible: </b> {{ policy.deductible | currency: \"IND\" }}</tr>\n      <hr>\n      <tr> <button class=\"btn btn-info  text-uppercase\"  [routerLink]=\"['/edit-policy',policy.planId]\">Update</button>&nbsp;&nbsp;\n        <button class=\"btn btn-info  text-uppercase\"  (click)=\"deletePolicy(policy.planId)\">Delete</button>\n      </tr>\n    </table>           \n    </div>\n    \n    <button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/create-policy']\">Create Policy</button>\n    &nbsp;&nbsp;\n    <!-- <button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/home']\">Home</button> -->\n    \n    <div></div>\n    <hr>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PolicyService } from '../policy.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Policy } from '../Policy';\n\n@Component({\n  selector: 'app-list-policy',\n  templateUrl: './list-policy.component.html',\n  styleUrls: ['./list-policy.component.css']\n})\nexport class ListPolicyComponent implements OnInit {\n\n  allPolicy: any = [];\n  Policies:Policy[];\n  //users: User[];\n  allUser: any;\n  successMsg : any;\n  planId:number;\n  Name: string;\n  Cost: number;\n  deductable:number;\n  details:string;\n  data: any;\n  searchText:'';\n\n  constructor(private policyService: PolicyService, private router: Router,\n    private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n\n  ngOnInit(): void {\n    this.reloadData();\n  \n  \n  }\n  deletePolicy(planId:number){\n    console.log()\n    this.policyService.deletePlan(planId)\n    .subscribe(\n      data => {\n        console.log(data);\n        this.reloadData();\n        //this.allPolicy;\n      },\n      error => console.log(error));\n  }\n\n  reloadData(){\n    // this.policies = this.policyService.getPolicyList();\n    this.policyService.showAllPlans().subscribe(\n      res=>\n      this.allPolicy=res);\n  }\n  \n}","import { NgModule ,CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule} from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\nimport { UserRegistrationComponent } from './user/user-registration/user-registration.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { UserLoginComponent } from './user/user-login/user-login.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { EditPolicyComponent } from './admin/policy/edit-policy/edit-policy.component';\nimport { RouterModule } from '@angular/router';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserShowPolicyComponent } from './user/user-show-policy/user-show-policy.component';\nimport { ListPolicyComponent } from './admin/policy/list-policy/list-policy.component';\nimport { CreatePolicyComponent } from './admin/policy/create-policy/create-policy.component';\nimport { FilterPipe } from './Pipes/filter.pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ViewEnrollPolicyComponent } from './user/view-enroll-policy/view-enroll-policy.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    //UserComponent,\n    //AdminComponent,\n    UserRegistrationComponent,\n    AdminRegistrationComponent,\n    UserLoginComponent,\n    AdminLoginComponent,\n    //PolicyComponent,\n    EditPolicyComponent,\n    ListPolicyComponent,\n  \n    UserShowPolicyComponent,\n    CreatePolicyComponent,\n    FilterPipe,\n    ViewEnrollPolicyComponent\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    Ng2SearchPipeModule\n    \n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n\n\n<div class=\"mx-5 mt-4\">\n    <!-- <div class=\"w-25\"> -->\n      <!-- <div *ngIf=\"params.enrolled\" class=\"alert alert-danger\">\n        Already enrolled in a plan.\n      </div> -->\n      \n    <!-- </div> -->\n    <div class=\"col-xs-12 col-sm-6 col-md-12 form-outline\">\n      <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\" placeholder=\"Search Policy here\">\n    </div>\n    <h1>Plans</h1>\n    <button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/view-enroll-policy']\">View Enroll Policy</button>\n    <hr/>\n    <div *ngFor=\"let policy of (allPolicy | filter:searchText)\" class=\"container\">\n        <table class=\"table table-dark\" id=\"myTable\">\n      <th>{{policy.name }}</th>\n      <tr><b>Plan Id:</b>{{policy.planId}}</tr>\n      <tr><b>Cost: </b>{{ policy.cost | currency: \"IND\" }}</tr>\n      <tr><b>Details:</b>{{policy.details}}</tr>\n      <tr><b>Deductible: </b> {{ policy.deductible | currency: \"IND\" }}</tr>\n      <hr>\n      <tr><b> <button class=\"btn btn-info  text-uppercase\" (click)=\"addPolicy(policy.planId)\">Enroll into Plan</button></b></tr>\n    </table>\n  </div>\n    <!-- <button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/home']\">Home</button> -->\n    <div></div>\n    <hr>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PolicyService } from '../policy.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserAuthenticationService } from 'src/app/service/user-authentication.service';\nimport { UserService } from '../user.service';\nimport { planEnrollment } from '../planEnrollment';\nimport { Enroll } from '../enroll';\n@Component({\n  selector: 'app-user-show-policy',\n  templateUrl: './user-show-policy.component.html',\n  styleUrls: ['./user-show-policy.component.css']\n})\nexport class UserShowPolicyComponent implements OnInit {\n\n  // policies : Observable<Policy[]>\n  policies:any;\n  allPolicy: any = [];\n  planId:number;\n  name: string;\n  Cost: number;\n  deductable:number;\n  details:string;\n  data: any;\n  searchText='';\n  userId:number;\n  \n  allUser:Enroll;\n\n\n  userInfo: planEnrollment={\n    plan: {         \n      planId: 0\n    },\n    user: {\n      userId: 0\n    }\n  \n  }\n \n  constructor(private userService: UserService, \n    private router: Router,\n    private policyService:PolicyService,\n    private http: HttpClient,\n    private route: ActivatedRoute,\n   private authService:UserAuthenticationService) { }\n\n\n    ngOnInit(): void {\n      this.reloadData();\n     //this.planId=this.route.snapshot.params[\"planId\"];\n     //console.log(this.planId);\n\n      }\n    \n      addPolicy(planId:number){\n       \n         this.userInfo.user.userId =+this.authService.getUserId();\n         this.userInfo.plan.planId=planId;\n         console.log(this.userInfo.user.userId);\n         console.log(this.userInfo.plan.planId);\n         console.log(this.userInfo);\n      this.userService.enrollment(this.userInfo).subscribe(\n        (repsonse:any) => {\n          console.log(repsonse);\n          this.allUser = repsonse;\n          alert(\"Policy Enroll Successfully\");\n        }\n      );\n      }\n    \n     \n\n      reloadData(){\n        this.policyService.showAllPlans().subscribe(\n          res=>\n          this.allPolicy=res,\n          error=>{\n             console.log(error);\n          });\n\n      }\n      \n \n}\n\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthenticationService {\n\n  constructor(private router: Router) { }\n \n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('userId')\n    //console.log(!(user === null))\n    return !(user === null)\n  }\n \n  setUserId(userId:any) {\n    sessionStorage.setItem('userId', userId)\n    console.log(userId)\n    \n    return true;\n \n}\n\ngetUserId(){\n  let user = sessionStorage.getItem('userId')\n  return user;\n}\n \nlogOut() {\n  this.router.navigate(['/home']);\n  sessionStorage.removeItem('userId')\n  \n}\n \nremoveUserId() {\n  sessionStorage.removeItem('userId')\n \n}\n\nsetUserName(userName:any){​​​​​​​​\nsessionStorage.setItem('userName',userName)\nconsole.log(userName)\nreturn true;\n }​​​​​​​​\ngetUserName() {​​​​​​​​\nlet user = sessionStorage.getItem('userName')\nconsole.log(user);\nreturn user;\n\n }​​​​​​​​\nremoveUserName() {​​​​​​​​\nsessionStorage.removeItem('userName')\n }​​​​​​​​\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NumberValueAccessor, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Policy } from '../Policy';\nimport { PolicyService } from '../policy.service';\n\n@Component({\n  selector: 'app-edit-policy',\n  templateUrl: './edit-policy.component.html',\n  styleUrls: ['./edit-policy.component.css']\n})\nexport class EditPolicyComponent implements OnInit {\n  submitted: false;\n  planId:number;\n  policy:Policy;\n  policyForm:FormGroup;\n  \n  \n  \n  constructor(private route: ActivatedRoute, \n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder:FormBuilder, private  policyService:PolicyService) { }\n \n  ngOnInit(): void {\n    // console.log(+this.route.snapshot.params['planId']);\n    this.planId=+this.activatedRoute.snapshot.paramMap.get('planId');\n    console.log(this.planId);\n    this.policyService.getPolicy(+this.route.snapshot.params['planId']).subscribe(\n      (policyInfo:Policy)=>{\n        this.policy = policyInfo;\n        console.log(policyInfo);\n        this.policyForm.get('name').setValue(this.policy.name);\n        this.policyForm.get('cost').setValue(this.policy.cost);\n        this.policyForm.get('deductible').setValue(this.policy.deductible);\n        this.policyForm.get('details').setValue(this.policy.details);\n        // this.router.navigate(['/list-policy']);\n        \n      }\n    )\n \n    this.policyForm = this.formBuilder.group({\n      name:['', [Validators.required, Validators.minLength(3)]],\n      cost:['', [Validators.required]],\n    deductible:['', [Validators.required]],\n      details:['',[Validators.required]],\n    });\n  }\n \n  get policyName(){\n    return this.policyForm.get('policyName')\n  }\n \n  get cost(){\n    return this.policyForm.get('cost')\n  }\n \n  get deductible(){\n    return this.policyForm.get('deductible')\n  }\n \n  get details(){\n    return this.policyForm.get('details')\n  }\n \n  update(){\n    console.log(this.policyForm.value)\n    this.policyForm.value.planId = this.route.snapshot.params['planId']\n    this.policyService.updatePolicy(this.policyForm.value).subscribe(\n      response =>{\n        console.log('Success!', response),\n        alert(\"Updated Successfully!\")\n        this.router.navigate(['/list-policy']);\n      },\n      error=>console.log(error)\n      \n    );\n  }\n}\n","<!-- <app-navbar></app-navbar> -->\n<hr>\n\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-7 col-xl-7 mx-auto\">\n        <h1>Update Policy</h1>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-6 mx-auto\">\n        <div class=\"card-body\">\n          <!-- <h5 class=\"card-title text-center\">Update Policy</h5> -->\n\n          <hr>\n          <form  [formGroup]=\"policyForm\" (submit)=\"update()\">\n            <div class=\"form-label-group\">\n                        <div><label for=\"Name\">Policy Name</label></div>\n                      <div>\n                      <input\n                       type=\"text\" id=\"name\" name=\"name\" \n                       class=\"form-control\" \n                       formControlName=\"name\" \n                       />\n                        </div>\n\n\n            </div>\n\n            <div class=\"form-label-group\">\n              <div>\n                <label for=\"cost\">Cost</label>\n              </div>\n              <div>\n                <input type=\"text\" id=\"cost\" name=\"mobile\" class=\"form-control\"\n                formControlName=\"cost\" \n                placeholder=\"cost\" required\n                 />\n              </div>\n            </div>\n\n            <div class=\"form-label-group\">\n              <div>\n                <label for=\"deductible\">Deductable Amount</label>\n              </div>\n              <div>\n                <input type=\"text\" id=\"deductible\" name=\"deductible\" class=\"form-control\"\n                formControlName=\"deductible\" \n                  placeholder=\"deductible amount\" />\n              </div>\n            </div>\n            <hr>\n            <button class=\"btn btn-info text-uppercase\" type=\"submit\">Update</button>\n            <!-- <button class=\"btn btn-info  text-uppercase\" [routerLink]=\"['/home']\">Home</button> -->\n            <!-- {{successMsg}} -->\n            <div>\n              <a class=\"d-block text-center mt-2 small\" [routerLink]=\"['/list-policy']\">list-policy </a>\n              <hr class=\"my-4\">\n            </div>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { Policy } from '../Policy';\nimport { PolicyService } from '../policy.service';\nimport { Router } from '@angular/router';\nimport { UserAuthenticationService } from 'src/app/service/user-authentication.service';\n\n@Component({\n  selector: 'app-create-policy',\n  templateUrl: './create-policy.component.html',\n  styleUrls: ['./create-policy.component.css']\n})\nexport class CreatePolicyComponent implements OnInit {\n\n  allUser: any;\n  successMsg : any;\n\n  policy:Policy={\n    planId:0,\n    name:'',\n    cost:0,\n    deductible:0,\n    details:''\n  }\n \n  \n  constructor(private UserService: PolicyService,\n    userAuth:UserAuthenticationService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n\n    this.successMsg = '';\n  }\n \n  createPolicy(){\n    let policy = {\n      planId: this.policy.planId,\n      name: this.policy.name,\n      cost: this.policy.cost,\n      deductible: this.policy.deductible,\n      details:this.policy.details\n\n    }\n   \n  this.UserService.createPolicy(policy).subscribe(\n    (repsonse) => {\n      console.log(repsonse);\n      alert(\"Policy Created Successfully!!\");\n      this.allUser = repsonse;\n      this.successMsg = \" Policy Created Successfully. \";\n      this.router.navigate(['/list-policy']);\n    }\n  );\n  }\n\n}\n","\n<!-- <app-navbar></app-navbar><hr> -->\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n        <div class=\"col-lg-7 col-xl-7 mx-auto\">\n        <h1>Create Policy</h1>\n    </div>\n        </div>\n        </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-xl-6 mx-auto\">\n            <div class=\"card card-signin flex-row my-5\">\n              <!-- <div class=\"card-img-left d-none d-md-flex\"> -->\n                 <!-- Background image for card set in CSS! -->\n              </div>\n              <div class=\"card-body\">\n                <!-- <h5 class=\"card-title text-center\">Create Policy</h5> -->\n                <form class=\"form-signin\" #regForm=\"ngForm\" (submit)=\"createPolicy()\">\n                  <div class=\"form-label-group\">\n                    <!-- <div>\n                      <label for=\"Name\">Policy Id</label></div>\n                      <div>\n                      <input type=\"text\" id=\"planId\" name=\"planId\" \n                       class=\"form-control\" \n                       placeholder=\"planId\" \n                       required\n                       [(ngModel)]=\"policy.planId\"\n                       #planId=\"ngModel\"/>\n                        </div> -->\n                  \n                    <div>\n                    <label for=\"Name\">Name</label></div>\n                    <div>\n                    <input type=\"text\" id=\"name\" name=\"name\" \n                     class=\"form-control\" \n                     placeholder=\"name\" \n                     required\n                     [(ngModel)]=\"policy.name\"\n                     #Name=\"ngModel\"/>\n                      </div>\n                  </div>\n  \n                  <div class=\"form-label-group\"><div>\n                    <label for=\"cost\">Cost</label></div>\n                  <div>\n                    <input type=\"text\" id=\"mobile\" name=\"mobile\" \n                    class=\"form-control\" \n                    placeholder=\"cost\" \n                     required\n                     [(ngModel)]=\"policy.cost\"\n                     #cost=\"ngModel\"/>\n                            </div>\n                            </div>\n                 \n                  <div class=\"form-label-group\"><div>\n                    <label for=\"details\">Details</label></div>\n                  <div>\n                    <input type=\"text\" id=\"details\" name=\"details\" class=\"form-control\"\n                     placeholder=\"details\" \n                     required\n                     [(ngModel)]=\"policy.details\"\n                     #details=\"ngModel\"/>\n                  </div>\n                  </div>\n\n                  <div class=\"form-label-group\"><div>\n                    <label for=\"deductible\">deductible </label></div>\n                  <div>\n                    <input type=\"text\" id=\"deductible\" name=\"deductible\" class=\"form-control\"\n                     placeholder=\"deductible amount\" \n                     required\n                     [(ngModel)]=\"policy.deductible\"\n                     #deductible=\"ngModel\"/>\n                  </div>\n                  </div>\n                  <hr>\n                  <button class=\"btn btn-info text-uppercase\" [disabled]=\"!regForm.valid\" type=\"submit\">Create</button>&nbsp;&nbsp;\n                  <!-- <button class=\"btn btn-info  text-uppercase\" [disabled]=\"!regForm.valid\" [routerLink]=\"['/home']\">Home</button> -->\n                  {{successMsg}}\n                  <div>\n                  <a class=\"d-block text-center mt-2 small\"  [routerLink]=\"['/list-policy']\">list-policy </a>\n                  <hr class=\"my-4\"></div>\n                \n                </form>\n              <!-- </div> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </body>","\n  <div>\n    <!-- <h1 class=\"h1\"><marque>Welcome to Insurance Policy Application</marque></h1> -->\n\n <h1 class=\"h1\"> Welcome to Insurance Policy Application</h1> \n\n  </div>\n  <div></div>\n  <header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" ><b> Insurance Application</b></a>\n\n    <ul *ngIf=\"!authService.isUserLoggedIn()\" class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link btn btn-primary\" routerLink=\"user-login\">User Login</a>\n      </li>\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link btn btn-primary\" routerLink=\"admin-login\">Admin Login</a>\n      </li>\n    </ul>\n    <ul *ngIf=\"authService.isUserLoggedIn()\" class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link btn btn-primary\">Welcome {{userName}}</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link btn btn-primary\" (click)=\"logout()\"> Logout </a>\n      </li>\n      \n    </ul>\n  </nav>\n</header>\n<body>\n  \n</body>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../model/user';\nimport { UserAuthenticationService } from '../service/user-authentication.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\nsessionValue:any;\n  isLoggedIn=false;\n  userName:any;\n  userId: any;\n \n  constructor(\n    public authService :UserAuthenticationService,\n    private router: Router\n  ) \n  {​​​​​​​​ \n     this.isLoggedIn=false;\n     this.userName=\"\";\n  }​​​​​​​​\n  ngOnInit(): void {​​​​​​​​\n   this.userName=this.authService.getUserName();\n   console.log(this.userName);\n  }​​​​​​​​\n  \n  logout(): void {\n    this.router.navigate(['/user-login']);\n    this.authService.removeUserId();\n    this.authService.removeUserName();\n    this.isLoggedIn=false;\n  }\n\n  \n\n}\n","<!-- <app-navbar></app-navbar> -->\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n        <div class=\"col-lg-7 col-xl-7 mx-auto\">\n        <h1>Insurance Application</h1>\n    </div>\n        </div>\n        </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-xl-6 mx-auto\">\n            <div class=\"card card-signin flex-row my-5\">\n              <!-- <div class=\"card-img-left d-none d-md-flex\"> -->\n                 <!-- Background image for card set in CSS! -->\n              </div>\n              <div class=\"card-body\">\n                <hr>\n                <h5 class=\"card-title text-center\">Register</h5>\n                <form class=\"form-signin\" #regForm=\"ngForm\" (submit)=\"addUser()\">\n                  <div class=\"form-label-group\">\n                  <div>\n                    <label for=\"Name\">Name</label></div>\n                    <div>\n                    <input type=\"text\" id=\"name\" name=\"name\" \n                     class=\"form-control\" \n                     placeholder=\"Username\" \n                     required\n                     [(ngModel)]=\"user.name\"\n                     #Name=\"ngModel\"/>\n                     <!-- <small *ngIf=\"Name.dirty && .errors?.required\" class=\"small text-danger\">\n                         Name is mandatory\n                        </small> -->\n                      </div>\n                  </div>\n  \n                  <div class=\"form-label-group\"><div>\n                    <label for=\"mobile\">Mobile Number</label></div>\n                  <div>\n                    <input type=\"text\" id=\"mobile\" name=\"mobile\" \n                    class=\"form-control\" \n                    placeholder=\"mobile Number\" \n                   pattern=\"[7-9]{1}[0-9]{9}\"\n                     required\n                     [(ngModel)]=\"user.mobile\"\n                     #mobileNumber=\"ngModel\">\n                     <!-- <small>\n                       Mobile Number is mandatory\n                        </small> -->\n                        <small *ngIf=\" mobileNumber.errors?.pattern\" class=\"small text-danger\">\n                           Enter Email\n                             </small>\n                            </div>\n                            </div>\n\n                            <div class=\"form-label-group\"><div>\n                              <label for=\"email\">Email</label></div>\n                            <div>\n                              <input type=\"email\" id=\"email\" name=email class=\"form-control\"\n                               placeholder=\"Email\" \n                               required\n                               [(ngModel)]=\"user.email\"\n                               #email=\"ngModel\"/>\n                            </div>\n                            </div>\n                 \n                  <div class=\"form-label-group\"><div>\n                    <label for=\"inputConfirmPassword\">password</label></div>\n                  <div>\n                    <input type=\"password\" id=\"password\" name=password class=\"form-control\"\n                     placeholder=\"Password\" \n                     required\n                     [(ngModel)]=\"user.password\"\n                     #password=\"ngModel\"/>\n                  </div>\n                  </div>\n\n\n               \n                  <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" [disabled]=\"!regForm.valid\" type=\"submit\">Register</button>\n                  {{successMsg}}\n                  <a class=\"d-block text-center mt-2 small\"   [routerLink]=\"['/user-login']\">Sign In</a>\n                  <hr class=\"my-4\">\n                </form>\n              <!-- </div> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </body>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../User';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n\n  allUser: any;\n  successMsg : any;\n\n  user: User={\n    userId:90,\n    name:'',\n    mobile:'',\n    email:'',\n    password:''\n  }\n \n  \n  constructor(private UserService: UserService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n\n    this.successMsg = '';\n  }\n \n  addUser(){\n    let user = {\n      userId: this.user.userId,\n      name: this.user.name,\n      mobile: this.user.mobile,\n      password: this.user.password,\n      email:this.user.email\n\n    }\n   \n  this.UserService.addUser(user).subscribe(\n    (repsonse) => {\n      console.log(repsonse);\n      this.allUser = repsonse;\n      this.successMsg = this.successMsg + \" You have successfully registered with login email\" +user.email+ \"password:\" +user.password;\n      this.router.navigate(['/user-login'])\n    }\n  );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\nimport { ListPolicyComponent } from './admin/policy/list-policy/list-policy.component';\nimport { EditPolicyComponent } from './admin/policy/edit-policy/edit-policy.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserRegistrationComponent } from './user/user-registration/user-registration.component';\nimport { UserShowPolicyComponent } from './user/user-show-policy/user-show-policy.component';\nimport { CreatePolicyComponent } from './admin/policy/create-policy/create-policy.component';\nimport { ViewEnrollPolicyComponent } from './user/view-enroll-policy/view-enroll-policy.component';\n\n\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'user-login',component:UserLoginComponent},\n  {path:'user-registration',component:UserRegistrationComponent},\n  {path:'admin-login',component:AdminLoginComponent},\n  {path:'admin-registeration',component:AdminRegistrationComponent},\n  {path:'list-policy',component:ListPolicyComponent},\n  {path:'edit-policy/:planId',component:EditPolicyComponent},\n  {path:'user-list-policy',component:UserShowPolicyComponent},\n  {path:'create-policy',component:CreatePolicyComponent},\n  {path:'view-enroll-policy',component:ViewEnrollPolicyComponent}\n  // {path:'admin-home',component:AdminHomeComponent},\n  // {path:'policy-enrollment',component:PolicyEnrollmentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}